<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	
	<!-- 공통 기능을 구현한 클래스를 빈으로 등록 -->
	<bean name="myFirstAdvice" class="kr.spring.ch01.pojo.MyFirsAdvice"/>
	<!-- AOP 설정 -->
	<aop:config>
		<!-- Aspect 설정 : Advice를 어떤 Pointcut에 적용할지 설정 -->
		<aop:aspect id="aspect" ref="myFirstAdvice">
			<!-- 핵심 기능이 있는 빈 객체의 메서드 설정 -->
			<aop:pointcut expression="execution(public String launch())" id="publicMethod"/>
			<!-- <aop:before method="before" pointcut-ref="publicMethod"/> -->
			<!-- <aop:after-returning method="afterReturning" pointcut-ref="publicMethod" returning="msg"/> -->
			<!-- <aop:after-throwing method="afterThrowing" pointcut-ref="publicMethod" throwing="ex"/> -->
			<!-- <aop:after method="after" pointcut-ref="publicMethod"/> -->
			<aop:around method="around" pointcut-ref="publicMethod"/>
		</aop:aspect>
	</aop:config>
	
	<!-- 핵심 로직이 있는 클래스 빈 설정 -->
	<bean name="product" class="kr.spring.product.Product"/>
</beans>





