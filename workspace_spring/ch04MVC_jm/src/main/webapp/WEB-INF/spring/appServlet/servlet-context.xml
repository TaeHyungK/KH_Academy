<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- @Autowired 사용을 위해 표시 -->
	<context:annotation-config/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 기본 설정 -->
	<beans:bean name="helloController" class="kr.spring.ch01.controller.HelloController"/>
	<beans:bean name="workController" class="kr.spring.ch02.controller.WorkController"/>
	
	<!-- 파라미터로 전송된 데이터 처리 -->
	<beans:bean name="searchController" class="kr.spring.ch03.controller.SeachController"/>	
	
	<!-- 데이터를 전송하여 자바빈에 담기 -->
	<beans:bean name="newArticleController" class="kr.spring.ch04.controller.NewArticleController"/>
	<beans:bean name="articleService" class="kr.spring.ch04.service.ArticleService"/>
	
	<!-- @CookieValue 어노테이션을 이용한 쿠키 매핑 -->
	<beans:bean name="cookieController" class="kr.spring.ch05.controller.CookieController"/>
	
	<!-- 뷰에 모델 데이터 전달하기 -->
	<beans:bean name="gameSearchController" class="kr.spring.ch06.controller.GameSearchController"/>
	<beans:bean name="searchService" class="kr.spring.ch06.service.SearchService"/>
	
	<!-- ====리소스 번들 지정==== -->
	<beans:bean name="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>messages.validation</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>	
	
	<!-- login -->
	<beans:bean class="kr.spring.ch07.controller.LoginController"/>
	<beans:bean class="kr.spring.ch07.service.LoginService"/>
	
	<!-- 파일 업로드 경로 설정 파일 지정 -->
	<context:property-placeholder location="classpath:config/file.properties"/>
	
	<!-- =====mutlipartResolver 설정===== -->
	<beans:bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800"/><!-- 50M -->
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>
	
	<!-- 파일 업로드 -->
	<beans:bean class="kr.spring.ch08.controller.SubmitReportController"/>
	
	<!-- 파일 다중 업로드 -->
	<beans:bean class="kr.spring.ch09.controller.FileUploadController"/>
	
	<!-- ====예외 처리==== -->
   <beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
      <beans:property name="exceptionMappings">
         <beans:props>
            <beans:prop key="java.lang.Exception">
               error/exception
            </beans:prop>
         </beans:props>
      </beans:property>
   </beans:bean>
   
   <!-- 예외처리 테스트 -->
   <beans:bean class="kr.spring.ch10.controller.ArithmeticOperatorController"/>
	
</beans:beans>





