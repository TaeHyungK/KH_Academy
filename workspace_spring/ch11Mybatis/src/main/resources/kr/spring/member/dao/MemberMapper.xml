<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 네임스페이스는 MemberMapper.xml과 맵핑되는 인터페이스 package를 포함해서 명시함. 불일치시 오류 발생 -->        
<mapper namespace="kr.spring.member.dao.MemberMapper">
	<!-- 
	id느 MemberMapper의 연동하고자하는 메서드명 parameterType은  파라미터로 전달되는 객체의 타입
	(java.util.Map) 또는 알리아스(map)
	resultType은 반환하는 객체의 타입
	(kr.spring.member.domain.MemberCommand) 또는 알리아스(memberCommand)
	 -->
	<select id="getMemberList" parameterType="map" resultType="memberCommand">
		SELECT
			*
		FROM (SELECT
				a.*,
				rownum rnum
			  FROM(SELECT
			    	 *
			       FROM zmember
			       ORDER BY reg_date DESC)a)
		<![CDATA[	       
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>	       		
	</select>
	
	<!-- <select id="getMemberCount" resultType="integer">
		SELECT
		  count(*)
		FROM zmember  
	</select>
	
	<insert id="insertMember" parameterType="memberCommand">
		INSERT INTO zmember(
			id,
			name,
			passwd,
			reg_date)
		VALUES(
			#{id},
			#{name},
			#{passwd},
			sysdate)	
	</insert>
	
	<select id="getMember" parameterType="string" resultType="memberCommand">
		SELECT
		  *
		FROM zmember
		WHERE id = #{id}  	  
	</select>
	  	
	<update id="updateMember" parameterType="memberCommand">
		UPDATE zmember
		SET
		  passwd=#{passwd},
		  name=#{name}
		WHERE id=#{id}  	
	</update>
	
	<delete id="deleteMember" parameterType="string">
		DELETE FROM zmember
		WHERE id = #{id}
	</delete> -->
</mapper>







